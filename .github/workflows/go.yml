name: Go Testing
run-name: ${{ github.actor }} is testing out Go Tests ðŸš€

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  APP_DB_USERNAME: postgres
  APP_DB_PASSWORD: password
  APP_DB_NAME: postgres

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    
    - name: Start Postgres
      run: docker run -it -p 5432:5432 -e POSTGRES_PASSWORD=password -d postgres 

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  trinity:
  needs: build
  runs-on: ubuntu-latest
  steps:
    - name: Run Trivy vulnerability scanner in IaC mode
          uses: aquasecurity/trivy-action@master
          with:
            scan-type: 'config'
            hide-progress: true
            format: 'sarif'
            output: 'trivy-results.sarif'
            exit-code: '1'
            ignore-unfixed: true
            severity: 'CRITICAL,HIGH'

  docker:
    needs: sonarcloud
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          push: false
          tags: ollmannphilipp/ci_cd_course:latest
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ollmannphilipp/ci_cd_course:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL'         
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ollmannphilipp/ci_cd_course:latest,ollmannphilipp/ci_cd_course:${{ github.sha }}

  sonarcloud:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
